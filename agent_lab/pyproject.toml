[tool.poetry]
name = "agentslab"
version = "0.1.0"
description = ""
authors = ["chas <chassweeting@microsoft.com>"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.10"
fastapi = "^0.111.0"
uvicorn = "^0.30.1"
pydantic = {extras = ["email"], version = "^2.7.3"}
requests = "^2.32.3"
langchain = "^0.2.3"
python-dotenv = "^1.0.1"
langchain-openai = "^0.1.8"
langchain-community = "^0.2.4"
pytz = "^2024.1"
openai = "^1.34.0"

[tool.poetry.group.dev.dependencies]
ipython = "^8.25.0"
pytest = "^8.2.2"
pytest-cov = "^5.0.0"
isort = "^5.13.2"
mypy = "^1.10.0"
flake8 = "^7.0.0"
ruff = "^0.4.8"
jupyterlab = "^4.2.2"
termcolor = "^2.4.0"
fuzzywuzzy = "^0.18.0"
pandas = "^2.2.2"
rouge-score = "^0.1.2"
matplotlib = "^3.9.0"
sqlalchemy = "^2.0.31"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"
line_length = 120


[tool.ruff]
target-version = "py310" # The minimum version supported
line-length = 120 # Use the same as 'black'
# By default, all rules are enabled. If you don't respect one rule, you have to explicitely ignore it
lint.select = ["ALL"]
lint.ignore = [
    "D", # pydocstyle
    "UP", # pyupgrade
    "ANN", # flake8-annotations
    "TD", # flake8-todos
    "FIX", # flake8-fixme
    "ARG", # flake8-unused-arguments
    "COM", # flake8-commas
    "TRY", # tryceratops
    "EM", # flake8-errmsg
    "BLE", # flake8-blind-except
    "RET", # flake8-return
    # Specific rule code
    "N806", # pep8-naming (non-lowercase-variable-in-function)
    "N811", # pep8-naming (constant-imported-as-non-constant)
    "N812", # pep8-naming (lowercase-imported-as-non-lowercase)
    "PLR0913", # refactor (too-many-arguments)
    "B028", # flake8-bugbear (no-explicit-stacklevel)
    "FA100",
    "G004",
    "ERA001",  # Found commented-out code
    "S101",  # Use of `assert` detected
    "TID252"  # Prefer absolute imports
]
exclude = [".venv/", "docs/"]
